{"version":3,"file":"index.js","names":["_lexer","_interopRequireDefault","require","_parser","_format","_stringify","_tags","obj","__esModule","parseDefaults","voidTags","closingTags","childlessTags","closingTagAncestorBreakers","includePositions","preferDoubleQuoteAttributes","exports","parse","str","options","arguments","length","undefined","tokens","lexer","nodes","parser","format","stringify","ast","toHTML"],"sources":["index.js"],"sourcesContent":["import lexer from './lexer'\nimport parser from './parser'\nimport { format } from './format'\nimport { toHTML } from './stringify'\nimport {\n  voidTags,\n  closingTags,\n  childlessTags,\n  closingTagAncestorBreakers,\n} from './tags'\n\nexport const parseDefaults = {\n  voidTags,\n  closingTags,\n  childlessTags,\n  closingTagAncestorBreakers,\n  includePositions: false,\n  preferDoubleQuoteAttributes: false,\n}\n\nexport function parse(str, options = parseDefaults) {\n  const tokens = lexer(str, options)\n  const nodes = parser(tokens, options)\n  return format(nodes, options)\n}\n\nexport function stringify(ast, options = parseDefaults) {\n  return toHTML(ast, options)\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AACA,IAAAI,KAAA,GAAAJ,OAAA;AAKe,SAAAD,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAER,IAAME,aAAa,GAAG;EAC3BC,QAAQ,EAARA,cAAQ;EACRC,WAAW,EAAXA,iBAAW;EACXC,aAAa,EAAbA,mBAAa;EACbC,0BAA0B,EAA1BA,gCAA0B;EAC1BC,gBAAgB,EAAE,KAAK;EACvBC,2BAA2B,EAAE;AAC/B,CAAC;AAAAC,OAAA,CAAAP,aAAA,GAAAA,aAAA;AAEM,SAASQ,KAAKA,CAACC,GAAG,EAA2B;EAAA,IAAzBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGX,aAAa;EAChD,IAAMc,MAAM,GAAG,IAAAC,iBAAK,EAACN,GAAG,EAAEC,OAAO,CAAC;EAClC,IAAMM,KAAK,GAAG,IAAAC,kBAAM,EAACH,MAAM,EAAEJ,OAAO,CAAC;EACrC,OAAO,IAAAQ,cAAM,EAACF,KAAK,EAAEN,OAAO,CAAC;AAC/B;AAEO,SAASS,SAASA,CAACC,GAAG,EAA2B;EAAA,IAAzBV,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGX,aAAa;EACpD,OAAO,IAAAqB,iBAAM,EAACD,GAAG,EAAEV,OAAO,CAAC;AAC7B"}